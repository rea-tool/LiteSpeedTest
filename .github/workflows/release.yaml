name: Build Test
on:
  push:
    branches:
      - master
jobs:
  
  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          include:
          - goarch: amd64
            goos: linux
          - goarch: arm64
            goos: linux
          - goos: android
            goarch: arm64
    steps:
      - uses: actions/checkout@master
      - name: Set up Go
        uses: actions/setup-go@v2
        with: 
          go-version: ^1.18.1
      - name: Building
        run: |
          GOOS=js GOARCH=wasm go get -u ./...
          cp $(go env GOROOT)/misc/wasm/wasm_exec.js ./web/wasm_exec.js
          GOOS=js GOARCH=wasm go build -o ./web/main.wasm ./wasm
          go build -o lite
          # 在此生成一个release文件夹，用来做接下来的打包成品使用
          mkdir release
          cp main release/main
      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
          name: release_linux # 生成的压缩包名称
          path: release # 需要打包的路径
      - name: Uploading assets...
        if: ${{ !env.ACT }}
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GAYHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_name: kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_content_type: application/gzip
